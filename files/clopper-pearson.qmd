---
title: "Clopper-Pearson Method"
format: html
editor: visual
---

```{r packages}
#| message: false
#| code-fold: true
library(tidyverse)

```

# Function

## Calculates C-P CI for Poisson mean parameter

```{r}
clopperPearson_CI <- function(x, conf.level = 0.95) {
  x <- sum(x)
  alpha <- 1-conf.level
  
  # lower bound
  lwr <- (1/2)*qchisq(p = alpha/2, df = 2*x)
  
  # upper bound
  uppr <- (1/2)*qchisq(p = 1-alpha/2, df = 2*(x+1))
  
  return(data.frame(lwr, uppr))
}



```

## C-P Coverage Probability plot for Poisson mean parameter

Coverage probability as a function of $\lambda$

```{r}
# creates a function calculating coverage probability for one lambda

cov_prob_clopperPearson <- function(lambda, conf.level = 0.95) {

    captured <- c() # initialize
    for (x in 0:100) {
      CI_temp <- clopperPearson_CI(x, conf.level)
    
      if (dplyr::between(lambda, CI_temp$lwr, CI_temp$uppr)) {
        captured <- c(captured,x)
      }
    }
    
  # sum pmf of each x that captures lambda in its CI
   p <- 0
    for (y in 1:length(captured)) {
      p <- p + dpois(captured[y], lambda=lambda)

    }
  
 # this is the coverage probability for lambda
  return(p)
}


```

```{r}
lambda <- c(seq(0, 50, by = 0.01))

coverage_CP <- c()
for (i in (1:length(lambda))) {
  coverage_CP[i] <- cov_prob_clopperPearson(lambda=lambda[i])
}
coverage_table_CP <- data.frame(lambda, cov.prob = coverage_CP)

cpf_CP <- coverage_table_CP |> 
  ggplot(mapping = aes(x = lambda,
                       y = cov.prob)) +
  geom_line(col = "#154533") +
  geom_line(y = 0.95, col = "red", linetype = "dashed") +
  labs(x = expression(lambda),
       y = "Coverage Probability",
       title = "Coverage Probability for the Clopper-Pearson Method",
       subtitle = "for values of the Poisson mean parameter up to 50") +
  annotate("text", x = 53, y = 0.95, label = "0.95", color = "red") +
  scale_x_continuous(breaks = seq(0,50,10)); cpf_CP
```

```{r}
ggplot(coverage_df, aes(x = M, y = coverage_prob, group = group)) +
  geom_line(color = "#bd8a12") +
  geom_point(color = "#154533") +
  labs(x = "M", y = "Coverage Probability", title = "Coverage Probability for Normal Approximation (NHG)") +
  geom_hline(yintercept = conf_level, color = "red", linetype = "dashed") +
  ylim(0, 1) +
  scale_x_continuous(breaks = c(0, 10, 20, 30, 40, 50), limits = c(0, 50)) +
  theme_minimal() +
  theme(
    legend.position = "none",
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    panel.border = element_rect(color = "black", fill = NA, size = 1),
    axis.ticks = element_line(size = 0.5),
    axis.ticks.length = unit(2, "mm"),
    axis.text.x = element_text(margin = margin(t = 5)),
    axis.text.y = element_text(margin = margin(r = 5))) 
```
